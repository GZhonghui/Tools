# Generated by AI

import fitz  # pip install PyMuPDF
import os
import sys
import time

def print_progress_bar(current, total, bar_length=40):
    percent = float(current) / total
    arrow = '-' * int(round(percent * bar_length) - 1) + '>'
    spaces = ' ' * (bar_length - len(arrow))

    sys.stdout.write(f"\rProgress: [{arrow}{spaces}] {int(percent * 100)}% ({current}/{total})")
    sys.stdout.flush()

def split_pdf_fitz_manual_copy(input_pdf_path, pages_per_split=100, start_page=0):
    doc = fitz.open(input_pdf_path)
    total_pages = doc.page_count

    if start_page >= total_pages:
        raise ValueError(f"start_page {start_page} 超过总页数 {total_pages}了！")

    output_folder = "output"
    os.makedirs(output_folder, exist_ok=True)

    # 准备计数
    total_parts = (total_pages - start_page + pages_per_split - 1) // pages_per_split

    part_counter = 0

    for i in range(start_page, total_pages, pages_per_split):
        new_doc = fitz.open()
        for j in range(i, min(i + pages_per_split, total_pages)):
            src_page = doc.load_page(j)
            rect = src_page.rect
            new_page = new_doc.new_page(width=rect.width, height=rect.height)
            new_page.show_pdf_page(rect, doc, pno=j)

        part_counter += 1
        output_pdf_path = os.path.join(
            output_folder,
            f"{os.path.splitext(os.path.basename(input_pdf_path))[0]}_part_{part_counter}.pdf"
        )
        new_doc.save(output_pdf_path, deflate=True, garbage=4, clean=True)
        new_doc.close()

        # 更新进度条
        print_progress_bar(part_counter, total_parts)

    doc.close()
    print("\nSplitting completed successfully!")

# 使用示例
split_pdf_fitz_manual_copy("基督山伯爵_打印版.pdf", pages_per_split=100, start_page=1) # skip page [1, start_page]
